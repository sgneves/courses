#**************************************************************************************************#
#                                                                                                  #
# 04_Merge_conflicts                                                                               #
#                                                                                                  #
# Authors: S.G.M. Neves                                                                            #
#                                                                                                  #
#**************************************************************************************************#

1. Introduction
git clone /dataquest/user/git/chatbot

cd chatbot

git checkout -b feature/king-bot

printf '\n    print("I am the king!")\n' >> bot.py

git add bot.py

git commit -m "Added a kingly statement to bot.py"

git checkout master

git checkout -b feature/queen-bot

printf '\n    print("I am the Queen!")\n' >> bot.py

git add bot.py

git commit -m "Added a queenly statement to bot.py"

git checkout master

git merge feature/king-bot

git merge feature/queen-bot

#--------------------------------------------------------------------------------------------------#

2. Aborting a Merge
git merge --abort

#--------------------------------------------------------------------------------------------------#

3. Resolving Conflicts
git merge feature/queen-bot

nano bot.py

git add bot.py

git commit -m "Fixed conflicts"

git push origin master

#--------------------------------------------------------------------------------------------------#

4. Resolving Multi-Line Conflicts
git checkout -b feature/random-printing

nano bot.py

from random import randint

n = randint(0,3)

if n == 0:
	print("Message one")
elif n == 1:
	print("Message two")
else:
	print("Message three")

git add bot.py

git commit -m "Modified bot.py to output random messages."

git checkout master

git checkout -b feature/dice-roller

nano bot.py

from random import randint

print(randint(0,3))
print(randint(0,3))

git add bot.py

git commit -m "Modified bot.py to output two random numbers."

git checkout master

git merge feature/random-printing

git merge feature/dice-roller

nano bot.py

git add bot.py

git commit -m "Resolved multi-line conflict"

git push origin master

#--------------------------------------------------------------------------------------------------#

5. Resolving Multiple Conflicts
git checkout -b feature/more-printing

printf '\n' >> bot.py
printf 'print("Text 1")\n' >> bot.py
printf 'print("Text 2")\n' >> bot.py

git add bot.py

git commit -m "Modified bot.py to print additional text."

git checkout master

git checkout -b feature/more-printing-2

printf '\n' >> bot.py
printf 'print("Text 3")\n' >> bot.py
printf 'print("Text 4")\n' >> bot.py

git add bot.py

git commit -m "Modified bot.py to output two random numbers."

git checkout master

git merge feature/more-printing

git merge feature/more-printing-2

git mergetool --tool-help

nano bot.py

git add bot.py

git commit -m "Resolved multiple conflicts"

git push origin master

#--------------------------------------------------------------------------------------------------#

6. Accepting Changes From Only One Branch
git checkout -b feature/remove-bot

rm bot.py

git rm bot.py

git commit -m "Remove bot"

git checkout master

git checkout -b feature/keep-bot

printf '\n' >> bot.py
printf 'print("Text")\n' >> bot.py

git add bot.py

git commit -m "Keeping bot.py"

git checkout master

git merge feature/remove-bot

git merge feature/keep-bot

git checkout --theirs .

git add .

git commit -m "Keeping bot.py"

git push origin master

#--------------------------------------------------------------------------------------------------#

7. Ignoring Files
printf '.DS_Store\n' > .gitignore
printf '*.pyc\n' >> .gitignore

git add .gitignore

git commit -m "Added gitignore"

git push origin master

#--------------------------------------------------------------------------------------------------#

8. Removing Cached Files
git rm --cached bot.py

git commit -m "Removed bot.py"

git push origin master
